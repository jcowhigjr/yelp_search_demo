# EXAMPLE USAGE
# Refer for explanation to following link:
# https://github.com/evilmartians/lefthook/blob/master/docs/full_guide.md
#
pre-push:
  commands:
    packages-audit:
      tags: frontend security
      run: yarn audit
    gems-audit:
      tags: backend security
      run: bundle audit update && bundle audit check
    javascript-audit:
      tags: frontend security
      run: yarn audit
    importmaps-audit:
      tags: frontend security
      run: bin/importmap audit
    rubocop:
      tags: backend style
      files: git diff --name-only master
      glob: '*.rb'
      run: bundle exec rubocop --force-exclusion -A {files}
    brakeman:
      tags: backend security
      run: bundle exec brakeman --no-pager
    rails-tests:
      tags: backend tests
      run: RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` bin/setup &&
           RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` bin/rails test:prepare --trace &&
           RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` CUPRITE=true bin/rails test:all

pre-commit:
  parallel: true
  commands:
    js:
      glob: '*.{js,ts}'
      run: yarn prettier --write {staged_files} && git add {staged_files}
    rubocop:
      tags: backend style
      glob: '*.rb'
      exclude: 'application.rb|routes.rb'
      run: bundle exec rubocop --force-exclusion {all_files}
    erb-lint:
      tags: frontend style
      files: git diff --name-only master
      glob: '*.erb'
      run: bundle exec erblint --lint-all {files}
    # brakeman:
    #   tags: backend security
    #   run: bundle exec brakeman --no-pager
    rails-tests:
      tags: backend tests
      run: RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` bin/setup &&
           RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` bin/rails test:prepare --trace &&
           RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` CUPRITE=true bin/rails test:all
    # i18n-tasks:
    #   run: bundle exec i18n-tasks health en
fixer:
  parallel: true
  commands:
    ruby-fixer:
      run: bundle exec rubocop --force-exclusion -A {all_files}
    js-fixer:
      glob: 'app/javascript/**.{js,ts,jsx,tsx}'
      run: yarn prettier --write {all_files}
    ruby-prettier:
      glob: 'app/**/*.rb'
      run: bundle exec rbprettier --write {files}
    erblint:
      run: bundle exec erblint --autocorrect --lint-all {all_files}
    brakeman:
      # the pager was causing the tests to fail in parallel
      run: bundle exec brakeman --no-pager
    packages-audit:
      tags: frontend security
      run: yarn audit
    gems-audit:
      tags: backend security
      run: bundle audit update && bundle audit check
    rails-tests:
      tags: backend tests
      run: RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` bin/setup &&
           RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` bin/rails test:prepare --trace &&
           RAILS_ENV=test RAILS_MASTER_KEY=`cat config/credentials/test.key` HEADLESS=true CUPRITE=true APP_HOST='127.0.0.1' bin/rails test:all
    i18n-tasks:
      run: bundle exec i18n-tasks health en missing unused
    javascript-audit:
      tags: frontend security
      run: yarn upgrade
    importmaps-audit:
      tags: frontend security
      run: bin/importmap outdated

# scripts:
#     "hello.js":
#       runner: node
#     "any.go":
#       runner: go run
#     "any.py":
#       runner: python
#     "any.rb":
#       runner: ruby
#     "any.sh":
#       runner: bash
