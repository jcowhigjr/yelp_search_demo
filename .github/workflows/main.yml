# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby 3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      - name: Build and run test
        env:
          RAILS_ENV: test
          RAILS_TEST_KEY: ${{ secrets.RAILS_TEST_KEY }}
        run: |
          bin/setup
          # test prepare required for tailwind css file required in application erb
          bin/rails test:prepare --trace
          bin/rails test
      - name: system-test
        env:
          RAILS_ENV: test
          RAILS_TEST_KEY: ${{ secrets.RAILS_TEST_KEY }}
        run: |
          bin/rails test:system --trace HEADLESS=true CUPRITE=true APP_HOST='127.0.0.1'
      - name: Upload failed system test images
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          path: ./tmp/capybara/screenshots/failures_*.png
      - name: system-test-retry
        if: ${{ failure() }}
        env:
          RAILS_ENV: test
          RAILS_TEST_KEY: ${{ secrets.RAILS_TEST_KEY }}
        run: |
          bin/rails test:system --trace HEADLESS=true CUPRITE=true APP_HOST='127.0.0.1'
      - name: set the status              # set the workflow status if command failed
        if: always()
        run: |
          if ${{ steps.system-test.outcome=='success' || steps.system-test-retry.outcome=='success' }}; then
             echo fine
          else
             exit 1
          fi

