# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
#  NOTE: https://github.community/t/retry-for-failed-steps/17136/7

name: "Ruby on Rails CI"
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning' 
        type: choice
        options:
        - info
        - warning
        - debug 
      tags:
        description: 'Test scenario tags'
        required: false 
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby 3
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      - name: Build and run test
        env:
          RAILS_ENV: test
          RAILS_TEST_KEY: ${{ secrets.RAILS_TEST_KEY }}
        run: |
          bin/setup
          # test prepare required for tailwind css file required in application erb
          bin/rails test:prepare --trace
          bin/rails test
      - name: system-tests
        id: system-test
        continue-on-error: true          # make the step always success and set status later
        env:
          RAILS_ENV: test
          RAILS_TEST_KEY: ${{ secrets.RAILS_TEST_KEY }}
        run: |
          bin/rails test:system --trace HEADLESS=true CUPRITE=true APP_HOST='127.0.0.1'
      - name: Upload failed system test images
        uses: actions/upload-artifact@v3
        if: steps.system-test.outcome=='failure'         # check the step outcome, retry 1st time
        with:
          path: ./tmp/capybara/screenshots/failures_*.png
      - name: system-test-retry
        id: system-test-retry-1
        continue-on-error: true          # make the step always success and set status later
        if: steps.system-test.outcome=='failure'         # check the step outcome, retry 1st time
        env:
          RAILS_ENV: test
          RAILS_TEST_KEY: ${{ secrets.RAILS_TEST_KEY }}
        run: |
          bin/rails test:system --trace HEADLESS=true CUPRITE=true APP_HOST='127.0.0.1'
      - name: set the status              # set the workflow status if command failed
        if: always()
        run: |
          if ${{ steps.system-test.outcome=='success' || steps.system-test-retry-1.outcome=='success' }}; then
             echo github.event.workflow
          else
             exit 1
          fi
      - name: log the inputs from manual job
        run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
        env:
          LEVEL: ${{ github.event.inputs.logLevel }}
          TAGS: ${{ github.event.inputs.tags }}
          ENVIRONMENT: ${{ github.event.inputs.environment }}

